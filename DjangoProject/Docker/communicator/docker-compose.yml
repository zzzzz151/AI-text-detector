services:
  communicator:
    build:
      context: .
      dockerfile: Dockerfile_Communicator
    command: sh -c "python3 ./communicator.py"
    environment:
      LISTEN_HOST: server
      LISTEN_PORT: 5555

  server:
    build:
      context: .
      dockerfile: Dockerfile_Server
    command: sh -c "python3 ./server.py"
    container_name: server
    environment:
      SEND_HOST: server
      SEND_PORT: 5555
    ports:
      - '5555:5555'

  db:
    build: ../mysql
    restart: always
    ports:
      - "3306:3306"
    #command: --init-file /docker-entrypoint-initdb.d/data.sql
    container_name: mysql_container
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=ai
    volumes:
      - .:/app
      - /tmp/app/mysqld:/run/mysqld
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3306"]
      interval: 1s
      retries: 40

  api:
    build: ../django
    volumes:
      - ../../../DjangoProject:/DjangoProject
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /DjangoProject
    environment:
      SEND_HOST: server
      SEND_PORT: 5555
    ports:
      - "8000:8000"
    container_name: django_container
    command:
      sh -c "pip3 install -r requirements.txt; python manage.py migrate; python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy

